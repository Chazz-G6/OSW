{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zkdlu\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\date-mate\\\\front\\\\src\\\\Page\\\\Query.js\";\nimport React, { Component } from 'react';\nimport './Query.css';\n\nclass QueryResult extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }\n    }, this.props.title, this.props.address);\n  }\n\n}\n\nclass Query extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: \"\",\n      results: [{\n        id: 0,\n        title: \"시발\",\n        address: \"병신아\"\n      }, {\n        id: 1,\n        title: \"장애인\",\n        address: \"병신아2\"\n      }]\n    };\n\n    this.UpdateQuery = () => {\n      this.getQuery().then(res => {\n        this.setState({\n          word: res.query\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.getQuery = async () => {\n      const response = await fetch('/api/query?query=' + this.props.keyword);\n      const body = await response.json();\n      console.log(body);\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.UpdateQuery();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.keyword !== prevProps.keyword) {\n      this.UpdateQuery();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"query-contatiner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, this.state.results.map(q => {\n      return /*#__PURE__*/React.createElement(QueryResult, {\n        title: q.title,\n        address: q.address,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      });\n    }));\n  }\n\n}\n\nexport default Query;","map":{"version":3,"sources":["C:/Users/zkdlu/OneDrive/바탕 화면/date-mate/front/src/Page/Query.js"],"names":["React","Component","QueryResult","render","props","title","address","Query","state","word","results","id","UpdateQuery","getQuery","then","res","setState","query","catch","err","console","log","response","fetch","keyword","body","json","componentDidMount","componentDidUpdate","prevProps","prevState","map","q"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAChCE,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,KAAL,CAAWC,KADhB,EAEK,KAAKD,KAAL,CAAWE,OAFhB,CADJ;AAMH;;AAR+B;;AAWpC,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIN,QAAAA,KAAK,EAAE,IAFX;AAGIC,QAAAA,OAAO,EAAE;AAHb,OADK,EAML;AACIK,QAAAA,EAAE,EAAE,CADR;AAEIN,QAAAA,KAAK,EAAE,KAFX;AAGIC,QAAAA,OAAO,EAAE;AAHb,OANK;AAFL,KADkB;;AAAA,SA4B1BM,WA5B0B,GA4BZ,MAAM;AAChB,WAAKC,QAAL,GACKC,IADL,CACUC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AACVP,UAAAA,IAAI,EAAEM,GAAG,CAACE;AADA,SAAd;AAGH,OALL,EAMKC,KANL,CAMWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOH,KApCyB;;AAAA,SAsC1BN,QAtC0B,GAsCf,YAAY;AACnB,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,KAAKnB,KAAL,CAAWoB,OAAlC,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AAEAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,aAAOA,IAAP;AACH,KA5CyB;AAAA;;AAkB1BE,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,WAAL;AACH;;AAEDgB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAI,KAAK1B,KAAL,CAAWoB,OAAX,KAAuBK,SAAS,CAACL,OAArC,EAA8C;AAC1C,WAAKZ,WAAL;AACH;AACJ;;AAoBDT,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKK,KAAL,CAAWE,OAAX,CAAmBqB,GAAnB,CAAuBC,CAAC,IAAI;AACxB,0BACA,oBAAC,WAAD;AACA,QAAA,KAAK,EAAEA,CAAC,CAAC3B,KADT;AAEA,QAAA,OAAO,EAAE2B,CAAC,CAAC1B,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAKH,KAND,CAFR,CADJ;AAaH;;AA5DyB;;AAgE9B,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './Query.css';\r\n\r\nclass QueryResult extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.props.title}\r\n                {this.props.address}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Query extends Component {\r\n    state = {\r\n        word: \"\",\r\n        results: [\r\n            {\r\n                id: 0,\r\n                title: \"시발\",\r\n                address: \"병신아\"\r\n            },\r\n            {\r\n                id: 1,\r\n                title: \"장애인\",\r\n                address: \"병신아2\"\r\n            }\r\n        ]\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.UpdateQuery();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.keyword !== prevProps.keyword) {\r\n            this.UpdateQuery();\r\n        }\r\n    }\r\n\r\n    UpdateQuery = () => {\r\n        this.getQuery()\r\n            .then(res => {\r\n                this.setState({\r\n                    word: res.query\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    getQuery = async () => {\r\n        const response = await fetch('/api/query?query=' + this.props.keyword);\r\n        const body = await response.json();\r\n\r\n        console.log(body);\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"query-contatiner\">\r\n                {\r\n                    this.state.results.map(q => {\r\n                        return (\r\n                        <QueryResult\r\n                        title={q.title}\r\n                        address={q.address}\r\n                        />)\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Query;"]},"metadata":{},"sourceType":"module"}