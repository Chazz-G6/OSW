{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zkdlu\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\date-mate\\\\front\\\\src\\\\Page\\\\Weather.js\";\nimport React, { Component } from 'react';\nimport './Weather.css';\nconst Cities = [{\n  'name': 'seoul',\n  'title': '서울',\n  'latitude': 37.6,\n  'longitude': 127\n}, {\n  'name': 'busan',\n  'title': '부산',\n  'latitude': 35,\n  'longitude': 129\n}, {\n  'name': 'gwangju',\n  'title': '광주',\n  'latitude': 35.1,\n  'longitude': 126.8\n}, {\n  'name': 'suwon',\n  'title': '수원',\n  'latitude': 37.17,\n  'longitude': 127.01\n}, {\n  'name': 'daejeon',\n  'title': '대전',\n  'latitude': 35.19,\n  'longitude': 128.1\n}];\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: {\n        seoul: {},\n        busan: {},\n        gwangju: {},\n        suwon: {},\n        daejeon: {}\n      }\n    };\n\n    this.getWeather = async (latitude, longitude) => {\n      const response = await fetch('/api/weather2?latitude=' + latitude + '&longitude=' + longitude);\n      const body = await response.json();\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    Cities.map(city => {\n      this.getWeather(city.latitude, city.longitude).then(res => {\n        this.state.cities[city.name] = {\n          temp: res.temp,\n          weather: res.weather\n        };\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"map-image\",\n      src: \"resource/map.jpg\",\n      alt: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), Cities.map(city => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: city.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }\n      }, city.title, \" \", this.state.cities[city.name].temp, \"\\u2103\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 37\n        }\n      }, this.state.cities[city.name].weather));\n    })));\n  }\n\n}\n\n;\nexport default Weather;","map":{"version":3,"sources":["C:/Users/zkdlu/OneDrive/바탕 화면/date-mate/front/src/Page/Weather.js"],"names":["React","Component","Cities","Weather","state","cities","seoul","busan","gwangju","suwon","daejeon","getWeather","latitude","longitude","response","fetch","body","json","componentDidMount","map","city","then","res","name","temp","weather","render","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG,CACX;AACI,UAAO,OADX;AAEI,WAAQ,IAFZ;AAGI,cAAW,IAHf;AAII,eAAY;AAJhB,CADW,EAOX;AACI,UAAO,OADX;AAEI,WAAQ,IAFZ;AAGI,cAAW,EAHf;AAII,eAAY;AAJhB,CAPW,EAaX;AACI,UAAO,SADX;AAEI,WAAQ,IAFZ;AAGI,cAAW,IAHf;AAII,eAAY;AAJhB,CAbW,EAmBX;AACI,UAAO,OADX;AAEI,WAAQ,IAFZ;AAGI,cAAW,KAHf;AAII,eAAY;AAJhB,CAnBW,EAyBX;AACI,UAAO,SADX;AAEI,WAAQ,IAFZ;AAGI,cAAW,KAHf;AAII,eAAY;AAJhB,CAzBW,CAAf;;AAkCA,MAAMC,OAAN,SAAsBF,SAAtB,CAA+B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAGJC,QAAAA,KAAK,EAAE,EAHH;AAKJC,QAAAA,OAAO,EAAE,EALL;AAOJC,QAAAA,KAAK,EAAE,EAPH;AASJC,QAAAA,OAAO,EAAE;AATL;AADJ,KADmB;;AAAA,SA4B3BC,UA5B2B,GA4Bd,OAAMC,QAAN,EAAgBC,SAAhB,KAA8B;AACvC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4BH,QAA5B,GAAuC,aAAvC,GAAuDC,SAAxD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,aAAOD,IAAP;AACH,KAhC0B;AAAA;;AAgB3BE,EAAAA,iBAAiB,GAAG;AAChBhB,IAAAA,MAAM,CAACiB,GAAP,CAAWC,IAAI,IAAI;AACf,WAAKT,UAAL,CAAgBS,IAAI,CAACR,QAArB,EAA+BQ,IAAI,CAACP,SAApC,EACSQ,IADT,CACcC,GAAG,IAAI;AACT,aAAKlB,KAAL,CAAWC,MAAX,CAAkBe,IAAI,CAACG,IAAvB,IAA+B;AAC3BC,UAAAA,IAAI,EAAEF,GAAG,CAACE,IADiB;AAE3BC,UAAAA,OAAO,EAAEH,GAAG,CAACG;AAFc,SAA/B;AAIH,OANT;AAOH,KARD;AASH;;AAQDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAuB,MAAA,GAAG,EAAC,kBAA3B;AAA8C,MAAA,GAAG,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGQxB,MAAM,CAACiB,GAAP,CAAWC,IAAI,IAAI;AACf,0BACI;AAAK,QAAA,SAAS,EAAEA,IAAI,CAACG,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,IAAI,CAACO,KADV,OACkB,KAAKvB,KAAL,CAAWC,MAAX,CAAkBe,IAAI,CAACG,IAAvB,EAA6BC,IAD/C,WADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKpB,KAAL,CAAWC,MAAX,CAAkBe,IAAI,CAACG,IAAvB,EAA6BE,OADlC,CAJJ,CADJ;AAUH,KAXD,CAHR,CADJ,CADJ;AAqBH;;AAxD0B;;AAyD9B;AAED,eAAetB,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './Weather.css';\r\n\r\nconst Cities = [\r\n    {\r\n        'name':'seoul',\r\n        'title':'서울',\r\n        'latitude':37.6,\r\n        'longitude':127\r\n    },\r\n    {\r\n        'name':'busan',\r\n        'title':'부산',\r\n        'latitude':35,\r\n        'longitude':129\r\n    },\r\n    {\r\n        'name':'gwangju',\r\n        'title':'광주',\r\n        'latitude':35.1,\r\n        'longitude':126.8\r\n    },\r\n    {\r\n        'name':'suwon',\r\n        'title':'수원',\r\n        'latitude':37.17,\r\n        'longitude':127.01\r\n    },\r\n    {\r\n        'name':'daejeon',\r\n        'title':'대전',\r\n        'latitude':35.19,\r\n        'longitude':128.1\r\n    },\r\n\r\n]\r\n\r\nclass Weather extends Component{\r\n    state = {\r\n        cities: {\r\n            seoul: {\r\n            },\r\n            busan: {\r\n            },\r\n            gwangju: {\r\n            },\r\n            suwon: {\r\n            },\r\n            daejeon: {\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() { \r\n        Cities.map(city => {\r\n            this.getWeather(city.latitude, city.longitude)\r\n                    .then(res => {\r\n                        this.state.cities[city.name] = {\r\n                            temp: res.temp,\r\n                            weather: res.weather\r\n                        }\r\n                    })\r\n        });\r\n    }\r\n\r\n    getWeather = async(latitude, longitude) => {\r\n        const response = await fetch('/api/weather2?latitude=' + latitude + '&longitude=' + longitude);\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"weather-container\">\r\n                <div className=\"weather\">\r\n                    <img class=\"map-image\" src=\"resource/map.jpg\" alt=\"map\"/>\r\n                    {\r\n                        Cities.map(city => {\r\n                            return (\r\n                                <div className={city.name}>\r\n                                    <div>\r\n                                        {city.title} {this.state.cities[city.name].temp}℃\r\n                                    </div>\r\n                                    <div>\r\n                                        {this.state.cities[city.name].weather}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}