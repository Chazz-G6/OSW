{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zkdlu\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\date-mate\\\\front\\\\src\\\\Page\\\\Weather.js\";\nimport React, { Component } from 'react';\nimport './Weather.css';\nconst Cities = [{\n  'name': 'seoul',\n  'latitude': 37.6,\n  'longitude': 127\n}, {\n  'name': 'busan',\n  'latitude': 35,\n  'longitude': 129\n}, {\n  'name': 'gwangju',\n  'latitude': 35.1,\n  'longitude': 126.8\n}, {\n  'name': 'suwon',\n  'latitude': 37.17,\n  'longitude': 127.01\n}, {\n  'name': 'daejeon',\n  'latitude': 35.19,\n  'longitude': 128.1\n}];\nconst Positions = {\n  Seoul: {\n    latitude: 37.6,\n    longitude: 127\n  },\n  Busan: {\n    latitude: 35,\n    longitude: 129\n  },\n  Gwangju: {\n    latitude: 35.1,\n    longitude: 126.8\n  },\n  Suwon: {\n    latitude: 37.17,\n    longitude: 127.01\n  },\n  Daejeon: {\n    latitude: 35.19,\n    longitude: 128.1\n  }\n};\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: {\n        seoul: {},\n        busan: {},\n        gwangju: {},\n        suwon: {},\n        daejeon: {}\n      }\n    };\n\n    this.getWeather = async city => {\n      const response = await fetch('/api/weather?city=' + city);\n      const body = await response.json();\n      return body;\n    };\n\n    this.getWeather2 = async (latitude, longitude) => {\n      const response = await fetch('/api/weather2?latitude=' + latitude + '&longitude=' + longitude);\n      const body = await response.json();\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    Cities.map(city => {\n      this.getWeather2(city.latitude, city.longitude).then(res => {\n        this.state.cities[city.name] = {\n          temp: res.temp,\n          weather: res.weather\n        };\n      });\n    });\n    this.getWeather('seoul').then(res => {\n      this.setState({\n        Seoul: {\n          temp: res.temp,\n          weather: res.weather\n        }\n      });\n    });\n    this.getWeather('busan').then(res => {\n      this.setState({\n        Busan: {\n          temp: res.temp,\n          weather: res.weather\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"map-image\",\n      src: \"resource/map.jpg\",\n      alt: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), Cities.map(city => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: city.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 36\n        }\n      }, \"\\uC11C\\uC6B8 \", this.state.cities[city.name].temp, \"\\u2103, \\uB0A0\\uC528 \", this.state.cities[city.name].weather);\n    })));\n  }\n\n}\n\n;\nexport default Weather;","map":{"version":3,"sources":["C:/Users/zkdlu/OneDrive/바탕 화면/date-mate/front/src/Page/Weather.js"],"names":["React","Component","Cities","Positions","Seoul","latitude","longitude","Busan","Gwangju","Suwon","Daejeon","Weather","state","cities","seoul","busan","gwangju","suwon","daejeon","getWeather","city","response","fetch","body","json","getWeather2","componentDidMount","map","then","res","name","temp","weather","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Weather.css';\r\n\r\nconst Cities = [\r\n    {\r\n        'name':'seoul',\r\n        'latitude':37.6,\r\n        'longitude':127\r\n    },\r\n    {\r\n        'name':'busan',\r\n        'latitude':35,\r\n        'longitude':129\r\n    },\r\n    {\r\n        'name':'gwangju',\r\n        'latitude':35.1,\r\n        'longitude':126.8\r\n    },\r\n    {\r\n        'name':'suwon',\r\n        'latitude':37.17,\r\n        'longitude':127.01\r\n    },\r\n    {\r\n        'name':'daejeon',\r\n        'latitude':35.19,\r\n        'longitude':128.1\r\n    },\r\n\r\n]\r\nconst Positions = {\r\n    Seoul: {\r\n        latitude:37.6,\r\n        longitude:127\r\n    },\r\n    Busan: {\r\n        latitude:35,\r\n        longitude:129\r\n    },\r\n    Gwangju: {\r\n        latitude:35.1,\r\n        longitude:126.8\r\n    },\r\n    Suwon: {\r\n        latitude:37.17,\r\n        longitude:127.01\r\n    },\r\n    Daejeon: {\r\n        latitude:35.19,\r\n        longitude:128.1\r\n    }\r\n}\r\n\r\nclass Weather extends Component{\r\n    state = {\r\n        cities: {\r\n            seoul: {\r\n            },\r\n            busan: {\r\n            },\r\n            gwangju: {\r\n            },\r\n            suwon: {\r\n            },\r\n            daejeon: {\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() { \r\n        Cities.map(city => {\r\n            this.getWeather2(city.latitude, city.longitude)\r\n                    .then(res => {\r\n                        this.state.cities[city.name] = {\r\n                            temp: res.temp,\r\n                            weather: res.weather\r\n                        }\r\n                    })\r\n        });\r\n        \r\n        this.getWeather('seoul').then(res => {\r\n            this.setState({\r\n                Seoul: {\r\n                    temp: res.temp,\r\n                    weather: res.weather\r\n                }\r\n            });\r\n        });\r\n        this.getWeather('busan').then(res => {\r\n            this.setState({\r\n                Busan: {\r\n                    temp: res.temp,\r\n                    weather: res.weather\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getWeather = async(city) => {\r\n        const response = await fetch('/api/weather?city=' + city);\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n    getWeather2 = async(latitude, longitude) => {\r\n        const response = await fetch('/api/weather2?latitude=' + latitude + '&longitude=' + longitude);\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"weather-container\">\r\n                <div className=\"weather\">\r\n                    <img class=\"map-image\" src=\"resource/map.jpg\" alt=\"map\"/>\r\n                    {\r\n                        Cities.map(city => {\r\n                            return <span className={city.name}>서울 {this.state.cities[city.name].temp}℃, 날씨 {this.state.cities[city.name].weather}</span>\r\n                        })\r\n                    }\r\n                    {/* <span className=\"seoul\">서울 {this.state.cities.seoul.temp}℃, 날씨 {this.state.Seoul.weather}</span>\r\n                    <span className=\"busan\">부산 {this.state.Busan.temp}℃, 날씨 {this.state.Busan.weather}</span>\r\n                    <span className=\"gwangju\">광주 {this.state.Seoul.temp}℃, 날씨 {this.state.Seoul.weather}</span>\r\n                    <span className=\"suwon\">수원 {this.state.Busan.temp}℃, 날씨 {this.state.Busan.weather}</span>\r\n                    <span className=\"daejeon\">대전 {this.state.Seoul.temp}℃, 날씨 {this.state.Seoul.weather}</span> */}\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}